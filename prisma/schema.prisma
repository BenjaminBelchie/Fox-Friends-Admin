// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Product {
    id String @id @default(uuid()) @db.Uuid
    title String
    shortDescription String
    longDescription String
    price String
    status Status
    tags ProductTags[]
    images ProductImages[]
    isFeatured Boolean @default(false)
    featuredIndex Int?
    createdAt DateTime @default(now())
}

model ProductImages {
    id String @id @default(uuid()) @db.Uuid
    image String
    isPrimaryImage Boolean @default(false)
    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId String @db.Uuid

}

model ProductTags {
    id String @id @default(uuid()) @db.Uuid
    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId String @db.Uuid
    tag Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
    tagId String @db.Uuid
}

model Tag {
    id String @id @default(uuid()) @db.Uuid
    tagName String
    products ProductTags[]
}

model SiteConfig {
    id Int @id @default(autoincrement())
    heroImage String @default("hero.jpg")
    primaryHeroText String
    secondaryHeroText String
}

enum Status {
    ACTIVE
    ARCHIVED
    DRAFT
}
